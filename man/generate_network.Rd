% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CoNI_functions.R
\name{generate_network}
\alias{generate_network}
\title{Create network}
\usage{
generate_network(
  ResultsCoNI,
  ColorVertexNetwork = TRUE,
  colorVertexTable,
  outputDir = "./",
  outputFileName = "ResultsCoNI",
  Class = NULL
)
}
\arguments{
\item{ResultsCoNI}{The input of the function are the results of CoNI.}

\item{ColorVertexNetwork}{logical. If TRUE, the table colorVertexTable has to be provided to specify vertex colors}

\item{colorVertexTable}{Table specifying the colors for the nodes (vertex features). The first column should contain the names matching the features of the vertex Data and the colors or other data can be specified in the rest of the columns}

\item{outputDir}{Output directory where the network is saved as well as the file that was used to generate the network.}

\item{outputFileName}{The name of the file used to create the network.}

\item{Class}{Optional data frame with at least two columns, first column contains all vertex features and another column the vertex feature class (column named "Class"). Necessary for treatment comparisons based on class}
}
\value{
This function returns a network (igraph object) constructed from CoNI output. Basic network statistics are included in the network
}
\description{
This function creates a network using as input the output of CoNI and a table specifying the colors for the nodes.
}
\examples{
#Generate Network

#Load color nodes table
data(MetColorTable)

#Alternatively assign the colors automatically for every vertex feature according to a "Class" column using the function 'assign_colorsAnnotation'
MetColorTable<-MetColorTable[,-c(3,4)]#Remove the colors assigned previously
MetColorTable<-assign_colorsAnnotation(MetColorTable)#assign colors according to "Class" column

#Generate Network
HFDNetwork<-generate_network(ResultsCoNI = CoNIResults,
                            colorNodesTable = MetColorTable,
                            outputDir = "./HFD/",
                            outputFileName = "HFD")
}
